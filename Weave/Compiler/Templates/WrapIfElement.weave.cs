// -----------------------------------------------------------------------
// <auto-generated>
//   This code was generated by Weave 2.0.1.0
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated.
// </auto-generated>
// -----------------------------------------------------------------------

namespace
    #line 1 "_config.weave"
           Weave.Compiler
    #line default
{
    using System;
    using System.IO;
    using
        #line 2 "_config.weave"
       Weave.Expressions
        #line default
        ;

    partial class
    Templates
    {
        [System.CodeDom.Compiler.GeneratedCode("Weave", "2.0.1.0")]
        public
        void
        RenderWrapIfElement
            (
            #line 1 "WrapIfElement.weave"
       WrapIfElement
            #line default
            model, TextWriter writer, string indentation = null)
        {
            var __encode = new Func<object, string>(
                #line 4 "_config.weave"
        ToLiteral
                #line default
                );
            var __originalIndentation = indentation = indentation ?? string.Empty;
            var __temp0 = indentation;
            #line 3 "WrapIfElement.weave"
  
    var flag = this.CreateVariable("flag");
    var oldIndentationBase = this.indentationBase;
    var newIndentationBase = this.CreateVariable("baseIndentation");
    var alterIndentation = model.Indentation != null;

            #line default
            indentation = __temp0;
            writer.Write(indentation);
            writer.Write("bool ");
            writer.Write(
                #line 9 "WrapIfElement.weave"
         flag 
                #line default
                );
            writer.Write(" =");
            writer.WriteLine();
            indentation = __originalIndentation + "    ";
            var __model0 =
                #line 10 "WrapIfElement.weave"
                  model.Expression
                #line default
                ;
            RenderCode(__model0, writer, indentation);
            writer.Write(indentation);
            writer.Write(";");
            writer.WriteLine();
            if (
                #line 12 "WrapIfElement.weave"
     alterIndentation
                #line default
                )
            {
                indentation = __originalIndentation;
                writer.Write(indentation);
                writer.Write("string ");
                writer.Write(
                    #line 13 "WrapIfElement.weave"
               newIndentationBase 
                    #line default
                    );
                writer.Write(";");
                writer.WriteLine();
            }
            indentation = __originalIndentation;
            writer.Write(indentation);
            writer.Write("if (");
            writer.Write(
                #line 15 "WrapIfElement.weave"
        flag 
                #line default
                );
            writer.Write(")");
            writer.WriteLine();
            writer.Write(indentation);
            writer.Write("{");
            writer.WriteLine();
            indentation = __originalIndentation + "    ";
            var __model1 =
                #line 17 "WrapIfElement.weave"
                    model.Before
                #line default
                ;
            WalkElements(__model1, writer, indentation);
            if (
                #line 18 "WrapIfElement.weave"
         alterIndentation
                #line default
                )
            {
                writer.Write(indentation);
                writer.Write(
                    #line 19 "WrapIfElement.weave"
            newIndentationBase 
                    #line default
                    );
                writer.Write(" = ");
                writer.Write(
                    #line 19 "WrapIfElement.weave"
                                        oldIndentationBase 
                    #line default
                    );
                writer.Write(" + ");
                writer.Write(__encode(
                    #line 19 "WrapIfElement.weave"
                                                                    this.indentation[model.Body].Item2 
                    #line default
                    ));
                writer.Write(";");
                writer.WriteLine();
            }
            indentation = __originalIndentation;
            writer.Write(indentation);
            writer.Write("}");
            writer.WriteLine();
            if (
                #line 22 "WrapIfElement.weave"
     alterIndentation
                #line default
                )
            {
                writer.Write(indentation);
                writer.Write("else");
                writer.WriteLine();
                writer.Write(indentation);
                writer.Write("{");
                writer.WriteLine();
                indentation = __originalIndentation + "    ";
                writer.Write(indentation);
                writer.Write(
                    #line 25 "WrapIfElement.weave"
            newIndentationBase 
                    #line default
                    );
                writer.Write(" = ");
                writer.Write(
                    #line 25 "WrapIfElement.weave"
                                        oldIndentationBase 
                    #line default
                    );
                writer.Write(" + ");
                writer.Write(__encode(
                    #line 25 "WrapIfElement.weave"
                                                                    this.indentation[model].Item2 
                    #line default
                    ));
                writer.Write(";");
                writer.WriteLine();
                indentation = __originalIndentation;
                writer.Write(indentation);
                writer.Write("}");
                writer.WriteLine();
            }
            writer.WriteLine();
            indentation = __originalIndentation;
            bool __flag0 =
                #line 29 "WrapIfElement.weave"
         alterIndentation
                #line default
                ;
            string __baseIndentation0;
            if (__flag0)
            {
                var __temp1 = indentation;
                #line 30 "WrapIfElement.weave"
      
        this.indentationBase = newIndentationBase;
    
                #line default
                indentation = __temp1;
                __baseIndentation0 = __originalIndentation + "";
            }
            else
            {
                __baseIndentation0 = __originalIndentation + "";
            }

            indentation = __baseIndentation0;
            indentation = __baseIndentation0;
            var __model2 =
                #line 34 "WrapIfElement.weave"
                       model.Body
                #line default
                ;
            WalkElement(__model2, writer, indentation);

            if (__flag0)
            {
                indentation = __originalIndentation;
                var __temp2 = indentation;
                #line 36 "WrapIfElement.weave"
      
        this.indentationBase = oldIndentationBase;
    
                #line default
                indentation = __temp2;
            }
            writer.WriteLine();
            writer.Write(indentation);
            writer.Write("if (");
            writer.Write(
                #line 41 "WrapIfElement.weave"
        flag 
                #line default
                );
            writer.Write(")");
            writer.WriteLine();
            writer.Write(indentation);
            writer.Write("{");
            writer.WriteLine();
            indentation = __originalIndentation + "    ";
            var __model3 =
                #line 43 "WrapIfElement.weave"
                    model.After
                #line default
                ;
            WalkElements(__model3, writer, indentation);
            indentation = __originalIndentation;
            writer.Write(indentation);
            writer.Write("}");
            writer.WriteLine();
        }
    }
}
